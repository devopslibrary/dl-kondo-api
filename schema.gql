# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type FacilityLogistics {
  id: ID!
  facilitySecured: Boolean!
  preferredFacilityType: String!
  facilityRequests: String!
}

input FacilityLogisticsInput {
  id: ID!
  facilitySecured: Boolean!
  preferredFacilityType: String!
  facilityRequests: String!
}

type Mutation {
  createForm(formName: String!): RequestForm!
}

type ProgramInformation {
  id: ID!
  eventName: String!
  dates: String!
  staffLead: String!
  department: String!
  location: String!
  country: String!
  typeWorkforce: Boolean!
  typeEducation: Boolean!
  typeMeeting: Boolean!
  typeSummit: Boolean!
  typeTradeshow: Boolean!
  typeEvent: Boolean!
  typeReception: Boolean!
  typeOtherEvent: Boolean!
  whoShouldAttend: String!
  accountCode: String!
  budget: Float!
  city: String!
  state: String!
  estimatedAttendance: Float!
  eventTime: String!
  setupByDate: DateTime!
  setupByTime: String!
  summary: String!
}

input ProgramInformationInput {
  id: ID!
  eventName: String!
  dates: String!
  staffLead: String!
  department: String!
  location: String!
  country: String!
  typeWorkforce: Boolean!
  typeEducation: Boolean!
  typeMeeting: Boolean!
  typeSummit: Boolean!
  typeTradeshow: Boolean!
  typeEvent: Boolean!
  typeReception: Boolean!
  typeOtherEvent: Boolean!
  whoShouldAttend: String!
  accountCode: String!
  budget: Float!
  city: String!
  state: String!
  estimatedAttendance: Float!
  eventTime: String!
  setupByDate: DateTime!
  setupByTime: String!
  summary: String!
}

type Query {
  findAllOrgs: [RequestForm!]!
}

type RegistrationLogistics {
  id: ID!
  registrationRequired: Boolean!
  invitationsRequired: Boolean!
  badgesRequired: Boolean!
}

input RegistrationLogisticsInput {
  id: ID!
  registrationRequired: Boolean!
  invitationsRequired: Boolean!
  badgesRequired: Boolean!
}

type RequestForm {
  id: ID!
  name: String!
  status: SubmissionStatus
  program: ProgramInformation
  strategy: StrategyAlignment
  facilityLogistics: FacilityLogistics
  registrationLogistics: RegistrationLogistics
  siteRequirements: SiteRequirements
  trainingSessions: [TrainingSession!]
}

input RequestFormInput {
  id: ID!
  name: String!
  status: SubmissionStatusInput
  program: ProgramInformationInput
  strategy: StrategyAlignmentInput
  facilityLogistics: FacilityLogisticsInput
  registrationLogistics: RegistrationLogisticsInput
  siteRequirements: SiteRequirementsInput
  trainingSessions: [TrainingSessionInput!]
}

type SiteRequirements {
  id: ID!
  breakfast: Boolean!
  lunch: Boolean!
  dinner: Boolean!
  snacks: Boolean!
  openbar: Boolean!
  cashbar: Boolean!
  supportStaff: Boolean!
  dining: Boolean!
  av: Boolean!
  tableTents: Boolean!
  signage: Boolean!
  amenities: String!
  additionalRequests: String!
  updatedAt: DateTime!
}

input SiteRequirementsInput {
  id: ID!
  breakfast: Boolean!
  lunch: Boolean!
  dinner: Boolean!
  snacks: Boolean!
  openbar: Boolean!
  cashbar: Boolean!
  supportStaff: Boolean!
  dining: Boolean!
  av: Boolean!
  tableTents: Boolean!
  signage: Boolean!
  amenities: String!
  additionalRequests: String!
  updatedAt: DateTime!
}

type StrategyAlignment {
  id: ID!
  mwbEducation: Boolean!
  mwbStandards: Boolean!
  mwbGlobalAccessibility: Boolean!
  mwbEngagement: Boolean!
  mwbValueProposition: Boolean!
  mwbWorkforceDevelopment: Boolean!
  objectives: String!
  goalPeopleReached: Float!
}

input StrategyAlignmentInput {
  id: ID!
  mwbEducation: Boolean!
  mwbStandards: Boolean!
  mwbGlobalAccessibility: Boolean!
  mwbEngagement: Boolean!
  mwbValueProposition: Boolean!
  mwbWorkforceDevelopment: Boolean!
  objectives: String!
  goalPeopleReached: Float!
}

type SubmissionStatus {
  id: ID!
  submittedToProgramManager: Boolean!
  submittedToProgramManagerInitials: String!
  submittedToProgramManagerDate: DateTime!
  submittedToMeetingsEvents: Boolean!
  submittedToMeetingsEventsInitials: String!
  submittedToMeetingsEventsDate: DateTime!
  submittedTrainingInformation: Boolean!
  submittedTrainingInformationInitials: String!
  submittedTrainingInformationDate: DateTime!
  submittedToMarketing: Boolean!
  submittedToMarketingInitials: String!
  submittedToMarketingDate: DateTime!
  additionalNotes: String!
}

input SubmissionStatusInput {
  id: ID!
  submittedToProgramManager: Boolean!
  submittedToProgramManagerInitials: String!
  submittedToProgramManagerDate: DateTime!
  submittedToMeetingsEvents: Boolean!
  submittedToMeetingsEventsInitials: String!
  submittedToMeetingsEventsDate: DateTime!
  submittedTrainingInformation: Boolean!
  submittedTrainingInformationInitials: String!
  submittedTrainingInformationDate: DateTime!
  submittedToMarketing: Boolean!
  submittedToMarketingInitials: String!
  submittedToMarketingDate: DateTime!
  additionalNotes: String!
}

type TrainingSession {
  id: ID!
  courseTitle: String!
  courseDescription: String!
  learningObjectives: String!
  aptifyCourseId: String!
  aptifyClassId: String!
  trainingDates: String!
  startTime: String!
  endTime: String!
  instructor: String!
  travelNeeded: Boolean!
  instructorBio: String!
  ceusAwarded: Boolean!
  numberOfCeus: Float!
  roomLayout: String!
  classCapacity: Float!
  standardMemberPrice: Float!
  standardNonMemberPrice: Float!
  earlyBirdMemberPrice: Float!
  earlyBirdNonMemberPrice: Float!
  dicountsAndBundles: String!
  additionalRequests: String!
}

input TrainingSessionInput {
  id: ID!
  courseTitle: String!
  courseDescription: String!
  learningObjectives: String!
  aptifyCourseId: String!
  aptifyClassId: String!
  trainingDates: String!
  startTime: String!
  endTime: String!
  instructor: String!
  travelNeeded: Boolean!
  instructorBio: String!
  ceusAwarded: Boolean!
  numberOfCeus: Float!
  roomLayout: String!
  classCapacity: Float!
  standardMemberPrice: Float!
  standardNonMemberPrice: Float!
  earlyBirdMemberPrice: Float!
  earlyBirdNonMemberPrice: Float!
  dicountsAndBundles: String!
  additionalRequests: String!
}
